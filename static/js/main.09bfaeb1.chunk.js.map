{"version":3,"sources":["components/Navbar.js","components/TabS.js","components/ListGroup.js","components/Footer.js","components/Homepage.js","components/Form.js","components/Channels.js","components/Carousel.js","components/Table.js","components/App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","Navbar","bg","variant","Brand","href","Nav","Link","ControlledTabs","useState","key","setKey","Tabs","id","activeKey","onSelect","k","Tab","eventKey","title","ListGroupComp","ListGroup","Item","action","Footer","props","Homepage","Jumbotron","Button","Join","show","setShow","handleClose","Form","Group","controlId","Label","Control","type","placeholder","as","multiple","rows","onClick","Modal","onHide","Header","closeButton","Title","Body","Channels","Accordion","defaultActiveKey","Card","Toggle","Collapse","ControlledCarousel","index","setIndex","Carousel","activeIndex","selectedIndex","e","src","alt","Caption","Tables","Table","striped","bordered","hover","map","placement","OverlayTrigger","trigger","overlay","Popover","Content","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09bfaeb1.chunk.js","sourcesContent":["import React from 'react'\nimport './bootstrap.min.css'\n\nimport { Navbar,Nav} from 'react-bootstrap';\n\nfunction NavBar() {\n    return (\n      <div className=\"Navbar\">\n        <Navbar bg=\"primary\" variant=\"dark\">\n            <Navbar.Brand href=\"#home\">Tricksters</Navbar.Brand>\n            <Nav className=\"mr-auto\">\n                <Nav.Link href=\"#home\">Home</Nav.Link>\n                <Nav.Link href=\"#channels\">Channels</Nav.Link>\n                <Nav.Link href=\"#roles\">Roles</Nav.Link>\n                <Nav.Link href=\"#photos\">Photos</Nav.Link>\n                <Nav.Link href=\"#join\">Join Now</Nav.Link>\n            </Nav>\n            \n        </Navbar>\n      </div>\n    )\n  }\n\nexport default NavBar","import {React, useState} from 'react'\nimport {Tabs, Tab} from 'react-bootstrap'\n\nfunction ControlledTabs() {\n    const [key, setKey] = useState('home');\n  \n    return (\n      <Tabs\n        id=\"controlled-tab-example\"\n        activeKey={key}\n        onSelect={(k) => setKey(k)}\n      >\n        <Tab eventKey=\"home\" title=\"Home\">\n          <p>Hello</p>\n        </Tab>\n        <Tab eventKey=\"profile\" title=\"Profile\">\n        <p>Hello</p>\n        </Tab>\n        <Tab eventKey=\"contact\" title=\"Contact\">\n        <p>Hello</p>\n        </Tab>\n      </Tabs>\n    );\n  }\n  \nexport default ControlledTabs","import React from 'react';\nimport {ListGroup} from 'react-bootstrap'\n\nfunction ListGroupComp() {\n    return(\n        <ListGroup>\n          <ListGroup.Item action href=\"#channels\">\n            Channels\n          </ListGroup.Item>\n          <ListGroup.Item action href=\"#roles\">\n            Roles\n          </ListGroup.Item>\n          <ListGroup.Item action href=\"#photos\">\n            Photos\n          </ListGroup.Item>\n\n        </ListGroup>\n      )}\n  \n \nexport default ListGroupComp","import React from 'react'\nimport './Footer.css'\nfunction Footer(props) {\n    return (\n      <div className='Footer'>\n        <h1>Tricksters 2020</h1>\n      </div>\n    )\n  }\nexport default Footer","import React from 'react';\nimport ControlledTabs from './TabS'\nimport ListGroupComp from './ListGroup'\nimport Footer from './Footer'\nimport {Jumbotron, Button} from 'react-bootstrap'\n\nfunction Homepage() {\n    return(\n        <div>\n            <Jumbotron>\n                <h1>Hello, world!</h1>\n                <p>\n                    This is a simple hero unit, a simple jumbotron-style component for calling\n                    extra attention to featured content or information.\n                </p>\n                <p>\n                    <Button variant=\"primary\">Learn more</Button>\n                </p>\n            </Jumbotron>\n            <ControlledTabs />\n            <ListGroupComp />\n            <Footer />\n        </div>\n    )\n}\n\nexport default Homepage","import {React, useState} from 'react'\nimport Footer from './Footer'\nimport {Form, Modal, Button} from 'react-bootstrap'\n\nfunction Join() {\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n    return(\n      <div>\n        <Form>\n  <Form.Group controlId=\"exampleForm.ControlInput1\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n    <Form.Label>Example select</Form.Label>\n    <Form.Control as=\"select\">\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlSelect2\">\n    <Form.Label>Example multiple select</Form.Label>\n    <Form.Control as=\"select\" multiple>\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n    </Form.Control>\n  </Form.Group>\n  <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows={3} />\n  </Form.Group>\n</Form>\n\n<>\n      <Button variant=\"primary\" onClick={handleShow}>\n        Launch demo modal\n      </Button>\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Modal heading</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </>\n    <Footer />\n      </div>\n    )\n}\n\nexport default Join","import React from 'react'\nimport {Accordion, Card, Button} from 'react-bootstrap'\nimport Footer from './Footer'\n\nfunction Channels() {\n    \n    return(\n        <div>\n            <Accordion defaultActiveKey=\"0\">\n  <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\n        Click me!\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey=\"0\">\n      <Card.Body>Hello! I'm the body</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n  <Card>\n    <Card.Header>\n      <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"1\">\n        Click me!\n      </Accordion.Toggle>\n    </Card.Header>\n    <Accordion.Collapse eventKey=\"1\">\n      <Card.Body>Hello! I'm another body</Card.Body>\n    </Accordion.Collapse>\n  </Card>\n</Accordion>\n<Footer />\n        </div>\n    )\n}\n\nexport default Channels","import {React,useState} from 'react'\nimport Footer from './Footer'\nimport {Carousel} from 'react-bootstrap'\n\nfunction ControlledCarousel() {\n    const [index, setIndex] = useState(0);\n  \n    const handleSelect = (selectedIndex, e) => {\n      setIndex(selectedIndex);\n    };\n  \n    return (\n        <div>\n      <Carousel activeIndex={index} onSelect={handleSelect}>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"./images/people_jumping.jpeg\"\n            alt=\"First slide\"\n          />\n          <Carousel.Caption>\n            <h3>First slide label</h3>\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"holder.js/800x400?text=Second slide&bg=282c34\"\n            alt=\"Second slide\"\n          />\n  \n          <Carousel.Caption>\n            <h3>Second slide label</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            src=\"holder.js/800x400?text=Third slide&bg=20232a\"\n            alt=\"Third slide\"\n          />\n  \n          <Carousel.Caption>\n            <h3>Third slide label</h3>\n            <p>\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur.\n            </p>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n      <Footer />\n      </div>\n    );\n  }\n  \nexport default ControlledCarousel","import React from 'react';\nimport {Button, OverlayTrigger, Popover, Table} from 'react-bootstrap'\nimport Footer from './Footer'\nfunction Tables() {\n    return(\n        <div>\n           <Table striped bordered hover>\n  <tbody>\n    <tr>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n    </tr>\n    <tr>\n    <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n    </tr>\n    <tr>\n    <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n    </tr>\n    <tr>\n    <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n    </tr>\n    <tr>\n    <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n      <td>\n      <>\n            {['top'].map((placement) => (\n                <OverlayTrigger\n                trigger=\"click\"\n                key={placement}\n                placement={placement}\n                overlay={\n                    <Popover id={`popover-positioned-${placement}`}>\n                    <Popover.Title as=\"h3\">{`Popover ${placement}`}</Popover.Title>\n                    <Popover.Content>\n                        <strong>Holy guacamole!</strong> Check this info.\n                    </Popover.Content>\n                    </Popover>\n                }\n                >\n                <Button variant=\"secondary\">Popover on {placement}</Button>\n                </OverlayTrigger>\n            ))}\n            </>\n      </td>\n    </tr>\n  </tbody>\n</Table>\n<Footer />\n        </div>\n    )\n}\n\nexport default Tables","import NavBar from './Navbar'\nimport Homepage from './Homepage'\nimport Join from './Form'\nimport Channels from './Channels'\nimport ControlledCarousel from './Carousel'\nimport Tables from './Table'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <Route exact path=\"/home\" component={Homepage} />\n        <Route exact path=\"/channels\" component={Channels} />\n        <Route exact path=\"/photos\" component={ControlledCarousel} />\n        <Route exact path=\"/roles\" component={Tables} />\n        <Route exact path=\"/join\" component={Join} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}